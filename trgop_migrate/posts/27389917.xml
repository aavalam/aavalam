<item>
	<title>Testing Exceptions with Rubydoctest in Ruby</title>
	<link>http://vgoff.posterous.com/testing-exceptions-with-rubydoctest-in-ruby</link>
	<pubDate>Sun Sep 05 05:15:54 -0700 2010</pubDate>
	
	<dc:creator><![CDATA[Victor Goff]]></dc:creator>
	
	
		<category domain="tag" nicename="doctest"><![CDATA[doctest]]></category>
	
		<category domain="tag" nicename="exceptions"><![CDATA[exceptions]]></category>
	
		<category domain="tag" nicename="ruby"><![CDATA[ruby]]></category>
	
		<category domain="tag" nicename="testing"><![CDATA[testing]]></category>
	

	<category><![CDATA[Uncategorized]]></category>

	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

  <guid isPermaLink="false">http://vgoff.posterous.com/testing-exceptions-with-rubydoctest-in-ruby</guid>
	<description></description>
	<content:encoded><![CDATA[<p>Reposted:  Original post by Victor Goff &ndash; Thursday, 28 August 2008, 07:42 PM</p>

<p>I was just approached by a student today, asking something like: &ldquo;How
do I test exceptions using doctest?&rdquo;</p>

<p>Here is my answer&hellip;</p>

<p>You can&rsquo;t&hellip; (evil laughter) muahahaha! (/evil laughter) Oh, wait&hellip;
you can if you work around it&hellip;</p>

<div class="CodeRay">
  <div class="code"><pre><span class="comment">#    #!/usr/bin/env ruby</span>

<span class="comment"># This initial solution for assignment 'borrowed' from David Miller.</span>
<span class="comment"># modified with rescue block by Vic.</span>

<span class="keyword">def</span> <span class="function">month_days</span>(month, year = <span class="constant">Date</span>.today.year)  <span class="comment"># default to current year</span>

  <span class="keyword">begin</span>
    raise <span class="string"><span class="delimiter">&quot;</span><span class="content">Months are limited to 1 - 12 inclusively.</span><span class="delimiter">&quot;</span></span> <span class="keyword">unless</span> (<span class="integer">1</span>..<span class="integer">12</span>).to_a.include?(month)
  <span class="keyword">rescue</span>
    <span class="keyword">return</span> <span class="string"><span class="delimiter">'</span><span class="content">RunTime Error: Month outside of range.</span><span class="delimiter">'</span></span>
  <span class="keyword">end</span>
  d = <span class="constant">Date</span>.civil(y=year, m=month, d=<span class="integer">1</span>)
  d1 = d &gt;&gt; <span class="integer">1</span>
  <span class="keyword">return</span> d1 - d

<span class="keyword">end</span>

<span class="comment">=begin
doctest: Test Known Good
&gt;&gt; month_days(2)
=&gt; Rational(29, 1)
doctest: Test Known Exception
&gt;&gt; month_days(13)
=&gt; &quot;RunTime Error: Month outside of range.&quot;
&gt;&gt; month_days(0)
=&gt; &quot;RunTime Error: Month outside of range.&quot;
=end</span>

puts month_days(<span class="integer">2</span>)
puts month_days(<span class="integer">13</span>) <span class="comment"># Puts an exception and keeps plugging along!</span>
puts month_days(<span class="integer">2</span>, <span class="integer">100</span>)</pre></div>
</div>


<p>Anyway, I thought it was interesting enough to share&hellip;</p>

<p>Run the code, you will note an exception raised, and then the code continues to run right through it&hellip; pretty nice, if you don&rsquo;t want the program to fail out.</p>

<p>Doctest it, and it tells you your exception passes (because it is raised)..</p>]]></content:encoded>
	<excerpt:encoded><![CDATA[Reposted: Original post by Victor Goff – Thursday, 28 August 2008, 07:42 PM I was just approached by a student today, asking something like: “How do I test exceptions using doctest?” Here is my answer… You can’t… (evil laughter) muahahaha! (/evil ...]]></excerpt:encoded>	

	<wp:post_date>Sun Sep 05 05:15:54 -0700 2010</wp:post_date>
	<wp:post_date_gmt>%= display_date %></wp:post_date_gmt>
	<wp:comment_status>open</wp:comment_status>
	<wp:ping_status>open</wp:ping_status>
	<wp:post_name>testing-exceptions-with-rubydoctest-in-ruby</wp:post_name>
	<wp:status>publish</wp:status>
	<wp:post_parent>0</wp:post_parent>
	<wp:menu_order>0</wp:menu_order>
	<wp:post_type>post</wp:post_type>
	<wp:post_password></wp:post_password>
	<wp:is_sticky>0</wp:is_sticky>

	
</item>
